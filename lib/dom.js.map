{"version":3,"sources":["../src/dom.js"],"names":[],"mappings":"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","file":"dom.js","sourcesContent":["/* global getComputedStyle window */\nimport {createElement, Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport FlowTip from './flowtip';\nimport ResizeObserver from 'react-resize-observer';\n\n/**\n * Find the closest node that will control the positioning of the FlowTip™\n * content.\n * @param   {Node} _node Initial node to search from.\n * @returns {Node} The anchor parent.\n */\nconst getAnchorParent = (_node) => {\n  let node = _node.parentNode;\n  const isParentNode = (node) => {\n    const style = getComputedStyle(node);\n    return style && style.position !== 'static';\n  };\n\n  while (node) {\n    if (isParentNode(node) || node.tagName === 'BODY') {\n      return node;\n    }\n    node = node.parentNode;\n  }\n  return node;\n};\n\n/**\n * Find the closest node that should enclose the FlowTip™'s content. Basically\n * the nearest thing with scrollbars.\n * @param   {[type]} _node       [description]\n * @param   {[type]} parentClass =             null [description]\n * @returns {[type]}             [description]\n */\nconst getBoundingParent = (_node, parentClass = null) => {\n  let node = _node.parentNode;\n  const scrollishStyle = (style) => [\n    'auto',\n    'hidden',\n    'scroll',\n  ].indexOf(style) !== -1;\n\n  const isParentNode = (node) => {\n    const style = getComputedStyle(node);\n    if (parentClass) {\n      return node.className.indexOf(parentClass) !== -1;\n    } else if (style) {\n      return scrollishStyle(style.overflow) ||\n        scrollishStyle(style.overflowX) ||\n        scrollishStyle(style.overflowY);\n    }\n    return false;\n  };\n\n  while (node) {\n    if (isParentNode(node) || node.tagName === 'BODY') {\n      return node;\n    }\n    node = node.parentNode;\n  }\n  return node;\n};\n\nexport default (Content, Tail) => {\n  return class MyFlowTip extends Component {\n    static defaultProps = {\n      clamp: true,\n    };\n\n    state = {\n      tail: {width: 0, height: 0},\n      content: {width: 0, height: 0},\n      parent: {top: 0, left: 0, width: 0, height: 0},\n      anchor: {top: 0, left: 0, width: 0, height: 0},\n    };\n\n    constructor(props) {\n      super(props);\n      this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    getAnchorElement() {\n      return getAnchorParent(ReactDOM.findDOMNode(this.refs.flowtip));\n    }\n\n    getParentElement() {\n      const {parentClass} = this.props;\n      return getBoundingParent(this.getAnchorElement(), parentClass);\n    }\n\n    getAnchorRect() {\n      const anchor = this.getAnchorElement().getBoundingClientRect();\n      return {\n        top: anchor.top,\n        left: anchor.left,\n        width: anchor.width,\n        height: anchor.height,\n      };\n    }\n\n    /**\n     * Calculate the bounding parent. This is the rect in which the tooltip\n     * must be contained.\n     * @returns {Object} Bounding rect.\n     */\n    getParentRect() {\n      const element = this.getParentElement();\n      const scrollerWidth = element.offsetWidth - element.clientWidth;\n      const scrollerHeight = element.offsetHeight - element.clientHeight;\n      const rect = element.getBoundingClientRect();\n      const parent = {\n        left: rect.left,\n        top: rect.top,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top,\n      };\n      // In addition to taking the parent element into consideration, take the\n      // viewport into consideration too.\n      if (this.props.clamp) {\n        parent.left = Math.max(parent.left, 0);\n        parent.top = Math.max(parent.top, 0);\n        parent.height = Math.min(\n          parent.height,\n          window.innerHeight - parent.top\n        );\n        parent.width = Math.min(\n          parent.width,\n          window.innerWidth - parent.left\n        );\n      }\n      parent.width -= scrollerWidth;\n      parent.height -= scrollerHeight;\n      return parent;\n    }\n\n    handleScroll() {\n      this.props.onReflow();\n      this.updateState();\n    }\n\n    updateState() {\n      this.setState({\n        parent: this.getParentRect(),\n        anchor: this.getAnchorRect(),\n      });\n    }\n\n    componentDidMount() {\n      const parent = this.getParentElement();\n      this.updateState();\n      window.addEventListener('scroll', this.handleScroll);\n      parent.addEventListener('scroll', this.handleScroll);\n    }\n\n    componentWillUnmount() {\n      const parent = this.getParentElement();\n      window.removeEventListener('scroll', this.handleScroll);\n      parent.removeEventListener('scroll', this.handleScroll);\n    }\n\n    render() {\n      return (\n        <FlowTip\n          ref='flowtip'\n          parent={this.state.parent}\n          anchor={this.state.anchor}\n          tail={this.state.tail}\n          content={this.state.content}\n          region={this.state.region}\n          offset={this.state.offset}\n          {...this.props}\n          children={({region, content, tail, target, parent}) => (\n            <Content\n              region={region}\n              position={content.position}\n              target={target}\n              parent={parent}\n              style={{\n                position: 'absolute',\n                left: content.position.left,\n                top: content.position.top,\n              }}\n              {...this.props.data}\n            >\n              {this.props.children}\n              <ResizeObserver onResize={(content) => this.setState({content})}/>\n              <Tail\n                position={tail.position}\n                target={target}\n                parent={parent}\n                region={region}\n                detached={tail.detached}\n                style={{\n                  position: 'absolute',\n                  left: tail.position.left,\n                  top: tail.position.top,\n                  visibility: tail.detached ? 'hidden' : 'visible',\n                }}\n                {...this.props.data}\n              >\n                <ResizeObserver onResize={(tail) => this.setState({tail})}/>\n              </Tail>\n            </Content>\n          )}\n        />\n      );\n    }\n  };\n};\n"]}